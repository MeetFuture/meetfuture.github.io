<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于外星人的几个常见问题</title>
      <link href="/article/61cabc4b/"/>
      <url>/article/61cabc4b/</url>
      
        <content type="html"><![CDATA[<p>4月27日美国五角大楼发布三段 UFO 视频,承认了三部UFO目击视频的真实性，<br>4月27日中国宣布FAST射电望远镜开始承担“搜寻外星文明”的任务。<br>5月9日日本宣布将建立太空作战部队。<br>5月16日巴西发生疑似UFO坠毁事件。</p><p>只要长期搜集这类UFO消息的人都知道，外星人是肯定存在的，不信的人无非是信息匮乏+认知狭隘。因为这些事对他们以前接受教育形成的三观造成了冲击，因此造成认知失调而拼命否认。</p><ol><li><p>UFO现象能不能说明外星人存在？</p><p>答：UFO现象有真有假，或者说九假一真，问题在于，那一真已经能说明问题，美国海军承认的视频里已经表明，这种飞行器的技术不是地球上技术所能做到的，因此此飞行器必然是外星文明创造的。外星文明存在，外星人必然存在。</p></li><li><p>外星人是否已经来过地球？是否已经和地球人接触？</p><p>答：已经来过，和极少部分人有过接触，和部分国家政府也有过接触。以下这个回答里有大量比较可靠的信息：美国51区到底有没有外星人？</p></li><li><p>外星人能来地球，说明技术远高于地球，为何不征服地球？</p><p>答：外星文明能来地球，说明所掌握的能量技术也非常之高，地球上的资源根本难以入其法眼，其次外星文明的整体道德水平也必然高于地球。因为一个文明的技术水平主要指标是其对能量的掌控能力（暂不细说，请思考），如果一个文明的整体道德水平不高但又掌握了极其强大的能量武器，最终结果必然是该文明自我毁灭（暂不细说，请思考），因此，大刘的黑暗森林法则是错误的，能够发展出极高技术水平并存活下去的外星文明，其道德水准必然高（因为不高的都死了）。而其最高级的外星文明必然制定宇宙法则对其他外星文明进行限制，而宇宙法则之一必然是不可随意征服其他外星文明，否则会遭到惩罚。</p></li><li><p>外星人既然和某些国家政府有过接触，为何不给其外星科技？</p><p>答：1.宇宙法则限制，不可随意干扰其他文明进程。 2.目前人类的整体道德水平低下，这时给予人类外星高科技，就相当于给四五岁的顽皮孩子一把手枪，其结果必然是人类毁灭，这违背宇宙法则。3.科技进展有逐步性和系统性，不是给了技术图纸就能科技飞跃。你现在给非洲国家全套芯片技术图纸，非洲国家也造不出芯片，缺人才缺工业缺材料。4.人类难以提供令外星人满意的可供交换的东西。你不会对猩猩手里的果子感兴趣。</p></li><li><p>外星人来地球做什么？</p><p>答：外星人有很多，目的各不相同，或许科研，或许观察，或许帮助，或许有其他阴谋。</p></li><li><p>外星文明的等级如何划分？</p><p>答：这涉及到对宇宙本质的认知，等级的划分取决于物质（科技）和精神（灵魂）的发展水平</p></li><li><p>外星人与地球人的关系？</p><p>答：以我个人所搜集的信息，我个人认为人类是远古时期外星人在地球上利用生物技术改造地球生物（类人猿）的产物。人类的产生是（神创论+进化论）的结合。外星人就是人类信仰中的神。现在外星人和地球人的关系大概类似于 人类和野生动物保护区里动物的关系，Your big brother is watching you！</p></li><li><p>外星人现在为什么不跟人类公开接触？</p><p>答：现在人类的整体认知和道德水平还不够，贸然公开接触会造成人类社会秩序混乱，而对一个外星文明的进程进行直接干预是违反宇宙法则的。事实上人类文明一直处于多个外星文明的监控之下，外星文明只会在地球危机时刻适当提醒和帮助。之前外星文明应该是禁止各国政府公开其信息的，只有当人类文明整体发展到一个水平，或者发生了其他必要的原因，外星文明才会逐步开放接触。因此未来必然会有和外星人公开接触的一天。如果你发现各国政府在越来越密集的公开放出UFO相关信息，那说明和外星人公开接触的时间快到了。</p></li></ol><p><img src="/asserts/images/202005/1.jpg" alt="1"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>世卫组织警告最糟糕的时刻即将到来，病毒利用了人、政党、国家之间的分歧，如何理解他的话？</title>
      <link href="/article/6c156477/"/>
      <url>/article/6c156477/</url>
      
        <content type="html"><![CDATA[<p>来自知乎回答 [<a href="https://www.zhihu.com/question/389416995/answer/1170525517">https://www.zhihu.com/question/389416995/answer/1170525517</a>]</p><p>世卫组织警告最糟糕的时刻即将到来，病毒利用了人、政党、国家之间的分歧，如何理解他的话？</p><p>十年前，西方人拍了一部《2012》，讲述了一个西方价值观下，人类文明面对无法抵御的末日浩劫自救的故事。在这个故事里，政客们直到最后一刻还在欺骗民众，仅仅是为了稳住中下层人民，让社会能够继续按既有轨道运行，等待方舟造好，让所谓“人类的希望”能够上船求存。</p><p>至于谁是人类的希望，评价标准是，你是否有钱，或者地位足够高，所以英国老太的狗可以上船，各行业的精英却被拒之门外。而中国，在电影中则扮演了一个重要而奇特的角色，方舟近乎是中国独力建造的，船票的分配权却被西方国家瓜分了。西方世界用来换取船票的，是一种漂亮、精致但在末世却没什么卵用的小纸片——它叫美元。</p><p>2012是一部简单直白的商业爆米花电影，导演和编剧从未想过在电影中蕴含什么深刻道理，震撼的视觉效果外，这部电影只剩下空洞苍白的剧情、经不起推敲的逻辑和廉价且俗套的煽情。然而这部片子同样是一部怎么解读都不为过的电影，是西方现代价值体系下诞生的一朵奇葩。</p><p>政客们满嘴谎言，60亿人被牺牲只换来了一小撮精英的逃生，精英的评价标准只是你所拥有的资产，在人类文明重建的大背景下，我不认为那些大腹便便的政客、金融天才们比任何一个身体健康的成年人更有价值，他们的价值可能还不如英国老太的狗，毕竟狗可以作为粮食短缺时的储备粮。电影中的中国扮演了一个西方人心目中的“理想中国”，提供廉价劳动力，提供血液和汗水，拥有冠绝全球的工业实力却安分于自己在产业链底层的地位，被西方人用漂亮的小纸片——现实中我们管这套东西叫金融——收割所有劳动果实。</p><p>而最具讽刺意义的是，西方世界的观众、影评人、媒体没有任何人对电影里的逻辑，电影里展现出的人类面对末日浩劫时展现的愚蠢提出质疑。他们认为这很合理，《2012》里的世界很正常。政府与政客当然是满口谎言，精英或者说有钱人们当然享有特权，60亿人在被欺骗中死去又有什么了不起的，西方观众忙着为最后时刻“人类希望”们决定开舱门救下一家三口的廉价煽情而感动。</p><p>对他们来说，一切都很正常。</p><p>对沉浸在西方价值观体系下的他们来说，一切再正常不过了。</p><p>特朗普说过的话就在几天前——“这就是生活。”</p><p>《2012》这部电影，可以近乎完美的映射疫情时代的当下，在西方精英的理想世界中，疫情下的世界，正常发展就该是这样的:政客们为了维护经济市场稳定，说白了就是资本的利益，漠视疫情的发展，欺骗普通人民这只是大号流感，而有钱人们生活在整洁、有序的高尚社区，生命安全得到了完美保障，“这就是生活”嘛。随着疫情的迅速发展，平民们感染人数和死亡人数节节攀升，盖子终于捂不住了，但谁在乎呢，有这段缓冲时间资本早就找好了退路，甚至已经做好了抄底准备。随着世界疫情的爆发，中国在“大国责任”和西方世界“普世价值”的感召下，开始不计代价的援助全世界或者说西方世界。得到中国无视成本的支援后，西方疫情开始好转，大疫之后必然是大治，早就抽身而退做好准备的资本开始引领全世界经济的复苏，西方世界赢来了新的黄金十年，甚至可以薅一薅因为帮扶全世界而元气大伤的中国的羊毛。</p><p>是不是觉得有点熟悉、似曾相识、好像在哪里见过?别怀疑，不用翻历史书，去找找07、08年的新闻，这套剧情几乎就是那几年的翻版。</p><p>很遗憾，西方精英的如意算盘，有了两个漏洞。</p><p>还记得去年的票房冠军吗？同样是面对末日浩劫——实话讲和太阳氦闪比起来，2012里的危机简直像是小孩子过家家——中国人选择了建造地下城以应对极端的严寒，通过抽签这种绝对公平的方式决定进入地下城的次序，当然有部分人有特权，他们是奋斗在第一线的军人、科研工作者。没有各国政府的扯皮，取而代之的是一个高度动员、高度集权的联合政府，没有漂亮的绿色小纸片买命，甚至连货币都被取消了，整个地球转入战时体制、计划经济时代。</p><p>和《2012》完美映射了西方的抗疫一样，《流浪地球》也几乎完美映射了我国在面对新冠时的做法，全国上下不计经济损失，以超出西方社会想象的行政能量，将整个社会的资源高度动员起来，以一种毅然决然的态度，全部投入到抗疫中来，并最终取得完胜。战胜疫情的中国，并没有像12年前或者电影里的那个冤大头中国一样，牺牲自己，成全他人，中国更加注重自己的复工复产，严防疫情反复，面对疫情水深火热的西方，我国封闭了国门，采取了一种整体上淡漠旁观，局部有限援助的方针。</p><p>西方人的“理想世界”落空了，一是新冠并没有如他们想象的那般驯服，二是中国并没有再一次充当拯救世界的殉道者。</p><p>现在你告诉我“新冠利用了人与人之间、政党与政党之间、国家与国家之间的分歧”“不要把这种病毒作为相互对抗或赢得政治得分的机会”?当然，我相信，作为一位有良知的人，谭赛德先生针对的应该是大洋彼岸那位上蹿下跳、出尽洋相的特朗普先生。但作为一朝遭蛇咬、十年怕井绳的中国人，我依然警惕了起来。</p><p>同样的话我在三个月前西方疫情刚起的时候就在说，我现在依然这么说:西方世界在面对新冠时的丑态百出、束手无策，病因是埋在西方价值观体系根子上的，根子不除，谁也救不了，只能静待疫苗问世或者全体免疫。中国在面对新冠时付出了巨大的努力和牺牲，目前正在努力恢复民生，中国更愿意把资源和精力花在自家国民身上，无力也无心去做那个拯救世界的英雄。中国能够控制住自家疫情蔓延，不对外输出病毒和恐慌，已经是尽到了一个大国的责任，做出了值得赞扬的贡献。拯救世界是全世界的义务，并不唯独是中国人的义务。</p><p>毕竟，十年并不是很久远的时间，中国人又不是特朗普的选民，只有七天记忆，当年的过河拆桥、卸磨杀驴还历历在目呢。救人者还自救是我国的传统美德，而扭曲的西方价值体系里并没有这句话的容身之处。</p><p>请西方世界自力更生，众志成城，“战胜病毒的最好方式是面对它，微笑着面对它”，如果这样还是赢不了，那就请微笑着自生自灭吧。体面一点</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于‘空间’的遐想</title>
      <link href="/article/bd55ad72/"/>
      <url>/article/bd55ad72/</url>
      
        <content type="html"><![CDATA[<p>一直以来，一个问题始终萦绕在我的脑海，我们的宇宙之外是什么？</p><p>我们很容易理解，一个物体之外是什么，比如：一个水杯，里面是水，外面是空气。一个盒子，外面同样也是装满某种物质的空间。这里的空间是能直观感受到的。<br>那么，我们所能观测到的宇宙这个盒子，外面又会是什么呢？ 外面的外面呢？<br>或许，本宇宙外一片混沌；可是混沌又是什么。<br>或许，本宇宙的外面同样有无穷个宇宙；可是无穷个宇宙之外又是什么。<br>无穷尽也！</p><p>宇宙和其雄伟</p><p>以下是知乎的高赞答案：</p><p>作者：汪有<br>链接：<a href="https://www.zhihu.com/question/26952218/answer/36730811">https://www.zhihu.com/question/26952218/answer/36730811</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>宇宙没有外<br>宇宙有外<br>宇宙外面有什么，我们不知道<br>宇宙外面有什么，我们可以猜</p><p>最有意思的是，这四个答案，从不同的角度来看，都对。<br>恩，接下来会用到些高维空间的知识，我就尽量说的简单点吧，一个一个来：</p><ol><li>宇宙没有外</li></ol><p>宇宙的大小是有限的，但是没有边界，也就没有外。<br>很多人问：“我一直往一个方向一直走一直走，走到一个地方走不下去了，不就是有边界了嘛？” “我往宇宙外面扔一个球，如果被弹回来了，不就是宇宙的边界嘛？”<br>没错，你不会走到尽头发现一堵墙写着“禁止通行”，也不会被宇宙边界弹回的球砸到脑袋。宇宙确实没有这样的边界。但这并不代表宇宙是无限的。<br>为了理解我们的三维宇宙，就先降维到二维世界去看看吧。举第一个关于二维世界的例子，我们的地球。<br><img src="https://pic2.zhimg.com/50/4c1b0588e9e4b85f1a555a57085e0358_hd.jpg" data-rawwidth="343" data-rawheight="336" class="content_image" width="343"><br>地球的表面是一个球体曲面，不考虑人类的飞行器飞离地球，人类生活的领域无非上至平流层的飞机，下至地壳表面的矿井深处。与整个地球的尺度比起来，我们相当于只是生活在地球二维表面的生物。<br>在这样一个二维表面上，地球有边界么？——没有，你可以沿着经纬线一路走下去，不会有把你拦在外面的尽头。<br>在这样的一个二维表面上，地球的面积是有限的么？——有的，大概是5.1亿平方公里。所以，二维地球表面是大小有限且没有边界的。</p><p>我们的三维宇宙，也是如此。在地球上的小尺度范围内，你站在广袤的平原上，认为地是平的。可从太空俯瞰地球的话，其实地面是弯曲的。你沿着一个方向走下去，会绕地球一圈走回原地。在我们的宇宙里，你以为从一点到另一点是直的，但大尺度范围来看，其实空间也是弯曲的。你拿着激光笔往远方直射，光线不会射到宇宙的壁上，而是会绕了一个大圈照到你的后脑勺。（如果你能等足够久的话）你以为他是直的，其实他是弯的。<br>在二维地球面上，不存在“外”。中国有外，你越过国境往北会去到蒙古。亚洲有外，往西翻越乌拉尔山会去到欧洲。但地球表面没有外，因为没有“边界”。在三维宇宙里，也不存在“外”。“楚门的世界”有外，《楚门的世界》男主活在一个被创造的世界里，他划船远航，终于撞到了他那虚拟世界的边缘。太阳系有外，旅行者号假以时日，穿越过太阳系边缘的奥尔特云，就可以离开太阳系。整个宇宙没有外，刚才说了，没有“边界”。<br><img src="https://pic4.zhimg.com/50/49f18fa4ad0c40d0f323ffff01ddb450_hd.jpg" data-rawwidth="880" data-rawheight="495" class="origin_image zh-lightbox-thumb" width="880" data-original="https://pic4.zhimg.com/49f18fa4ad0c40d0f323ffff01ddb450_r.jpg"><br>《楚门的世界》剧照，男主划船出海，撞到了世界的边缘。</p><p>当然，没有”边界“，不代表它”大的没有边了“，一个没有边界的空间，也可以很小。比如一个乒乓球的二维表面，没有边界，但表面积就小的可怜。比如我们的宇宙也曾小过，我们的宇宙诞生于138亿年前的宇宙大爆炸，在大爆炸的起点（称之为Time 0），宇宙密度为无限大，所有的物质挤在一个体积为0的小空间里，然后迅速爆炸，过了138亿年，形成了现在我们看到的宇宙。可在刚刚爆发的一瞬，其实宇宙有一刻和一个苹果一样大，甚至可以放到你现在的手心里。乒乓球的二维表面是有限面积的，宇宙的三维空间是有限体积的（体积多大？现在我们也不太确定）。<br><img src="https://pic2.zhimg.com/50/999dd4d8497c5b6bf4dec6689b8afe01_hd.jpg" data-rawwidth="500" data-rawheight="301" class="origin_image zh-lightbox-thumb" width="500" data-original="https://pic2.zhimg.com/999dd4d8497c5b6bf4dec6689b8afe01_r.jpg"><br>宇宙大爆炸时间演进图，在时间0点附近，宇宙小的可以放在你的手心里。<br>第一部分完毕，宇宙没有外，但它有限。</p><ol start="2"><li>宇宙有外</li></ol><p>这时候一定有读者要问，你说二维地球表面没有外，但旅行者号不是离开地球了么？再看下面这张地球的图，B和C都在地球表面，但A不是在外面了么？A是不是地球的外面？对于宇宙来说，有没有这样的点A？答案是，没错，在更高维度上，宇宙其实也有外面，但这个“外面”，跟我们平时了解的“外面”不一样。<img src="https://pic1.zhimg.com/50/8be26242287c873f0e14ee37abcd56e1_hd.jpg" data-rawwidth="343" data-rawheight="336" class="content_image" width="343">A点确实在地球表面二维空间的“外面”，但这是升了一个维度，从二维球面来到了三维空间。那么如果我们在三维空间升一个维度，进入四维空间，那么，宇宙也存在这样的A点，宇宙有外。但是，如果是只生活在地球二维球面，不懂什么是三维空间的二维生物，不会理解A点的存在。同样，对于我们这些生活在三维空间里的人类，也不会找到宇宙四维空间以外的A点。为什么说所谓的“外面”，和我们平时说的“外面”不一样？因为任何高维到低维的降维，都会将大量的信息压缩在一个狭窄的空间里。比如，用铅笔在纸上划一道，你得到了一条线——这是一维。用显微镜观察，你会发现这条线是有宽度的——这是二维。镜头再拉近，你会发现一颗颗石墨颗粒粘在纸上——这是三维。镜头从近到远，从三维回到二维再回到一维，降维了，相当于把一颗颗石墨颗粒复杂的三维空间信息挤压进了狭小的一维的一条线。信息量可大了！<img src="https://pic1.zhimg.com/50/8be26242287c873f0e14ee37abcd56e1_hd.jpg" data-rawwidth="343" data-rawheight="336" class="content_image" width="343">还是看这张图，我们知道这个图上画的是三维地球。但其实，它出现在你的二维电脑屏幕上，这是一张二维图。它把三维的地球表面信息压缩进二维图片，东半球和西半球重叠挤压在了一起。由于信息量挤压太大，你会发现，B点的位置在东西半球代表不同的城市，如果你和我一样是文科生，熟悉地球仪，不难发现B点在西半球位于西雅图附近，在东半球则位于我国驻马店。这时，当驻马店遇上西雅图，如果有一架飞机从驻马店飞向西雅图，你会发现，在图上，该飞机从B点飞到了C点，然后原路返回B点。在二维平面上看都是B点，但其实飞机已经换了一个半球了。同样，这是二维空间中，两个半球挤压到了一个圆圈里，两个半球共用一个圆形边缘。三维空间也行。想象两个四维空间的苹果，被挤压到了一个三维空间的苹果里面。别人看你手里拿着一个苹果，但其实这个空间里有俩！这时，在苹果深处，有一只虫子。它啃啊啃啊，啃到了表面。又啃啊啃啊，原路啃了回去。这时你看着它，以为它啃回了原路。但其实它啃进了第二个苹果！正如同两个半球共用一个圆形边缘，这两个苹果共用一个苹果表面！正如从驻马店去西雅图，必须先去边缘的C点，虫子要啃到第二个苹果里，必须先从苹果深处啃到表面再啃回去。这时候有人就会想，那既然挤压后，反正驻马店和西雅图也重合了，飞机直接不经过表面直接穿过纸面来到西雅图不行么？这不是省路了么？那个要去第二个苹果的虫子，不经过表面，就不可以啃到第二个苹果里去么？哇！恭喜你，发现了虫洞。虫洞是高一个维度的桥梁，在二维世界里，虫洞是一个三维的通道，洞口是圆形的，飞机可以从驻马店的反面直接穿过洞口来到正面的西雅图。在三维空间里，虫洞是一个四维的时空桥，洞口是三维的球，走进去再出来，就去了另一个空间。这就是为什么电影《星际穿越》里，男主的飞船冲进虫洞，看着是一个好看的球，就如同进入了隧道，出来后发现来到了另一个星系。<img src="https://pic3.zhimg.com/50/c30beaac2e54020839b7795f99618f99_hd.jpg" data-rawwidth="500" data-rawheight="227" class="origin_image zh-lightbox-thumb" width="500" data-original="https://pic3.zhimg.com/c30beaac2e54020839b7795f99618f99_r.jpg">电影《星际穿越》预告片截图，里面的虫洞入口长这样。我们没见过真的虫洞，我感觉这个挺像的。但要注意，必须在时空扭曲的很厉害的情况下（比如两个半球都挤一起了），虫洞才可能建立。这时候问题来了，挤到一起的两个苹果A和B，虫子在苹果A里，啃到了表面，如果一跃跳到了苹果外面空中，那么，可以确定虫子是在A的“外面”了。可是，如果虫子啃回了苹果B的深处，外面看着似乎还在苹果A的原位，可已经换了苹果诶，这时，虫子在苹果A的外面嘛？再假设，虫子是通过一个四维虫洞从苹果A来到苹果B的，在虫洞里的时候，虫子相当于已经进入了高维空间，这算是在苹果A的外面嘛？这取决于你对“外面”的定义。所以，宇宙在更高维度的角度下，也有外面。可这个“外面”，和我们平时说的“外面”不一样。3. 宇宙外面有什么，我们不知道所以，单纯从我们三维空间的角度，宇宙没有外。讨论”宇宙外面是什么“对于我们三维空间的生物，没有意义。同样，我们也不可能讨论“时间0之前是什么？”科学不讨论这些问题，你可以把它交给宗教和信仰，罗马教皇现在就基本认同：是上帝引发了宇宙大爆炸，创造了世界。飞天面条教也许认为，时间0之前的时间线就像一根弹力十足的面条，你正在和一个丑男相亲，突然面条一拉伸，时间线变长了，于是你感到这个相亲好漫长啊，怎么也相不完。为什么科学不讨论这些？因为这些问题既不能证实，也不能证伪，那些PhD们没法用这个课题做实验，没法发论文，研究这个毕不了业。我们只能把这些问题交给神学家、或者哲学家。所以，三维空间的我们，不知道宇宙“外面”是什么。4. 宇宙外面有什么，我们可以猜刨除飞天面条教的设定，其实也可以有一些看上去很靠谱（但还是猜）的猜测。比如：平行宇宙可能我们身边就有平行宇宙。平行宇宙可能处于同一空间体系，但时间体系不同，就好像同在一条铁路线上疾驰的先后两列火车；它们有可能处于同一时间体系，但空间体系不同，就好像同时行驶在立交桥上下两层通道中的小汽车。——百度百科平行宇宙词条平行宇宙也许和我们毫无关联，我们怎样也无法相遇。可能和我们的宇宙紧紧挤在一起，共用一个三维空间，就好像两个挤在一个苹果皮下的两个苹果。又或者部分和我们宇宙重叠，另一部分彼此独立，比如下面：<img src="https://pic3.zhimg.com/50/c1c749ca312d2fac6f5302470fabd034_hd.jpg" data-rawwidth="448" data-rawheight="285" class="origin_image zh-lightbox-thumb" width="448" data-original="https://pic3.zhimg.com/c1c749ca312d2fac6f5302470fabd034_r.jpg">如同两个互相穿过一部分的苹果，注意在A点附近的重叠部分不是指一个点同时处于两个苹果中，而是这是两个不同宇宙中的驻马店和西雅图，只是恰好共用一个空间点。那么，如果在A点有虫洞的话，我们可以从左边的苹果宇宙跑到右边的苹果宇宙当中去。这时候问题又来了：如果我们通过A点虫洞，从我们已知的宇宙左苹果西雅图，去到了右边苹果的驻马店，这是，我们算是在宇宙的“外面”了么？如果我们已经找到了两个宇宙的自由联通之法，我们是会把通向的地方定义为自己宇宙的一部分，还是算作宇宙的“外面”？看过了平行宇宙，再比如一个猜测：包住我们宇宙的宇宙我们都知道黑洞。掉进黑洞，就出不来。黑洞的逃逸速度超过光速，黑洞的边界也是两个世界的边界（标准的叫法是“事件视界”），你没法了解到事件视界的另一边发生了什么。黑洞里面有什么，我们也不知道，对于我们来说，由于无法证实、无法证伪，黑洞里面的世界我们没法用科学进行研究。就算，黑洞里有一个同样美好的世界，这个世界的物理定律可以和我们相同也可以相异，我们也不知道。所以影视片可以随便设定，《星际穿越》里说里面是男主女儿房间书架的后面，也不能算错，反正不能证伪。<img src="https://pic2.zhimg.com/50/25b259616b9431410d6ba72a4ae2a1b3_hd.jpg" data-rawwidth="988" data-rawheight="615" class="origin_image zh-lightbox-thumb" width="988" data-original="https://pic2.zhimg.com/25b259616b9431410d6ba72a4ae2a1b3_r.jpg">《星际穿越》剧照，男主进入黑洞后，发现进入了高维空间，就在女儿书架后面。值得注意的是，这里的高维中，连时间维度都被展平，所以男主可以随意选择任何一个时间点，向前向后，不受制约地和女儿交流。这时，假设黑洞里真的有一个世界，原则上里面的人出不去。黑洞外面则是我们的宇宙，“包住”了黑洞。问题来了——你怎么知道我们不是生活在这样一个黑洞里呐？毕竟宇宙的逃逸速度也超过光速，还没有光可以由我们的宇宙散佚到外面去，所以从宇宙外真有一个包住我们宇宙的宇宙，在上一级宇宙里观测我们的宇宙，由于没有任何东西能从我们的宇宙出来，我们的宇宙看上去不就像是一个黑洞么。当然也有区别，至少我们宇宙还能给黑洞送点东西进去，但我们现在没发现宇宙外面有东西送进来嘛。问题又来，假设外面真有个包住我们的上一级宇宙，那算是我们的外面了吧。那黑洞里面也是我们抵达不了的空间，假设里面也有一个世界，算不算宇宙的“外面”呢？我们科学的边界、我们观测的边界，我们穷尽一切力量都到达不了也测量不了，所有的科学都全部失灵的地方，是不是就是“外面”呢？<br>补充：为什么如果有其他宇宙，性质可以和我们一样又不一样？看下一张图，再来考虑二维世界<br><img src="https://pic2.zhimg.com/50/5a3a7c65362d32ab34b6549b9b01cd56_hd.jpg" data-rawwidth="343" data-rawheight="336" class="content_image" width="343"><br>如图，我把两个地球套在了一起，在我们地球之外又套了一个等比例放大的无质量空心地球（就称之为“外地球”），两个地球共用一个球心。外地球和内地球相当于两个互不干涉的二维平行世界。<br>如果把两个地球近似看做二维世界，那么我们生活在内地球的球面上，一切物理定律都和我们现在的完全一样。我们知道：光速是30万km/s，重力加速度g大约是9.8N/kg，每千克质量的物体受到的重力是9.8牛顿。<br>三维空间的我们还知道，距离地球中心越远，重力加速度也越小。但这个近似二维世界里不考虑三维海拔提升的话，上面生活的人会本能地以为地球上的g全是9.8。重力加速度在内地球的二维世界里，成了一个不变的常数。<br>现在来看外地球，由于外地球距离地球远，同样是二维世界，他们世界里的重力加速度可能是4。于是在外地球的世界里，重力加速度等于4，也是常数。由于在三维空间里所处位置不同，不同二维世界里的基础常数，重力加速度出现了变化。（当然，纯二维世界没有向“下”的重力这么一说，他们没有“下”，这里仅作举例说明）<br>同样，由于我们的三维宇宙在高维空间里所处位置与其他平行宇宙不同，不同宇宙的发展阶段也不同，我们的宇宙和其他宇宙的基本常数也会不同。光速可能会不同，万有引力常数可能会不同。再比如，我们的宇宙，和一个刚刚在宇宙大爆炸中炸开几秒钟，扭曲非常严重的宇宙，圆周率都不同。</p><p>综上，虽然我们真没法知道宇宙外面有什么，但是还可以快乐地猜上一猜。至此四个部分回答完毕。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于‘时间’的一些理解</title>
      <link href="/article/7df4f12f/"/>
      <url>/article/7df4f12f/</url>
      
        <content type="html"><![CDATA[<h2 id="时间是一个较为抽象的概念，是物质的运动、变化的持续性、顺序性的表现">时间是一个较为抽象的概念，是物质的运动、变化的持续性、顺序性的表现</h2><p>时间 是一个较为抽象的概念，是物质的运动、变化的持续性、顺序性的表现。时间概念包含时刻和时段两个概念。时间是人类用以描述物质运动过程或事件发生过程的一个参数，确定时间，是靠不受外界影响的物质周期变化的规律。例如月球绕地球周期，地球绕太阳周期，地球自转周期，原子震荡周期等。爱因斯坦说时间和空间是人们认知的一种错觉。</p><p>爱因斯坦在相对论中提出：不能把时间、空间、物质三者分开解释。时间与空间一起组成四维时空，构成宇宙的基本结构。时间与空间在测量上都不是绝对的，观察者在不同的相对速度或不同时空结构的测量点，所测量到时间的流逝是不同的。广义相对论预测质量产生的重力场将造成扭曲的时空结构，并且在大质量（例如：黑洞）附近的时钟之时间流逝比在距离大质量较远的地方的时钟之时间流逝要慢。现有的仪器已经证实了这些相对论关于时间所做精确的预测，并且其成果已经应用于全球定位系统。另外，狭义相对论中有“时间膨胀”效应：在观察者看来，一个具有相对运动的时钟之时间流逝比自己参考系的（静止的）时钟之时间流逝慢。</p><p>时间是地球（其他天体理论上也可以）上的所有其他物体（物质）三维运动（位移）对人的感官影响形成的一种量。就今天的物理理论来说时间是连续的、不间断的，也没有量子特性。一些至今还没有被证实的，试图将相对论与量子力学结合起来的理论，如量子重力理论、弦理论、M理论等，预言时间是间断的，有量子特性的。一些理论猜测普朗克时间可能是时间的最小单位。</p><p>根据斯蒂芬·威廉·霍金（Stephen William Hawking）所解出广义相对论中的爱因斯坦方程式，显示宇宙的时间是有一个起始点，由大爆炸开始的，奇点没有“之前”一说，讨论在此之前的时间是毫无意义的。而物质与时空并存，只要物质存在，时间便有意义。</p><p>爱因斯坦认为：“现在、过去和将来之间的差别只是一种错觉。”时间倒流或回到过去，其实是建立在一个不存在的逻辑基础上的。（注明：在基本的物理学定理中没有时间概念，时间不参与计算，这并不表明其不存在，物种衰老、昼夜更替都证明其真实存在，切莫误解其意；相对论中，粒子的很多运动，裂变、聚变，互相之间都是这种关系，互为倒放的关系。）</p><h2 id="时间’这个东西，其实不是实际存在的">'时间’这个东西，其实不是实际存在的</h2><p>就和物理学中’力’的概念一样。</p><p>都是人类对自然规律的一种认知归纳。</p><p>当代科学至少已经证明了引力和电磁力都是场效应的体现。</p><p>举个例子。1，汽车轮子在一单位时间内转了一万圈。2，由此得出转速为一万圈/单位时间。</p><p>这里的转速，就是由1衍生出来的次级概念。</p><p>所谓的力，就是引来描述各种场效应的便于理解的次级概念。</p><p>时间也是这样。</p><p>时间，空间，时空一体，都是为了描述物质运动，由人脑总结归纳出来的次级概念。</p><p>往上能追溯到什么，我不知道，往下可以衍生出速度，关联起到功率等概念。</p><p>所以我说，时间并不实际存在。</p><p>人类作为物质生物，只能影响客观世界，而不能对主观的’时间’这个概念施加影响。</p><p>在我的理解中，如果要实现时空旅行，有两种办法。</p><p>一种往后，比较简单，把自己冻起来，绝对零度。</p><p>当构成你的所有原子都不动了，你的时间就停止了，当你解冻复活，你就穿越到了未来。</p><p>另一种回到过去就比较困难了。</p><p>首先，你需要跳出这个宇宙（其实不跳出也行）</p><p>然后，用某种伟力，将宇宙中所以物质还原到曾经的某种状态（也就是你想去的时间点）</p><p>最后重新进入宇宙。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java常用技术</title>
      <link href="/article/efde5af/"/>
      <url>/article/efde5af/</url>
      
        <content type="html"><![CDATA[<p>原文地址：<a href="https://github.com/aalansehaiyang/technology-talk">https://github.com/aalansehaiyang/technology-talk</a></p><hr><h3 id="前言">前言</h3><p>有人认为编程是一门技术活，要有一定的天赋，非天资聪慧者不能及也。</p><p>其实不然，笔者计算机专业出身，对于技术这碗饭有一些心得体会，大多数人成为某领域顶级专家可能会有些难度，但应对日常工作，<strong>成长为资深研发工程师、技术专家、甚至成为小团队的Team Leader，并不难。</strong></p><p><strong>多读书、多看报，多研究开源框架源码，比如：<a href="http://github.com">github.com</a>，这里汇集了全球工程师的智慧！</strong></p><p>言归正传，本文会列举工作中常用的一些技术，以及如何锻炼提升自己的架构能力。</p><p>由于每块技术市场上基本都有对应的网络资料或书籍，所以本文只是少篇幅列举工作中用到的核心知识点，抛砖引玉，属于进阶型，不适用初学者。</p><h3 id="基础知识">基础知识</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/java.md">java</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/spring.md">spring</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/springboot.md">spring boot</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/springcloud.md">spring cloud</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/ibatis.md">ibatis</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/%E5%B8%B8%E7%94%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md">设计模式</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/basic-knowledge/Log4j.md">Log日志</a></li></ul><h3 id="数据库">数据库</h3><p>目前使用最多还是mysql，虽然单机性能比不上oracle，但免费开源，单机成本低且借助于分布式集群，可以有强大的输出能力。</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/database-connection-pool.md">连接池</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/transaction.md">事务</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.md">分库分表</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/id-generate.md">全局表 ID生成器</a></li><li><a href="http://blog.csdn.net/itomge/article/details/6909240">读写分离</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/sql-optimize.md">SQL调优</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/data-base/other.md">其它</a></li></ul><h3 id="web容器-协议-网络">web容器/协议/网络</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/load-balance.md">负载均衡</a></li><li>服务器<ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/Nginx.md">Nginx</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/tomcat.md">Tomcat</a></li></ul></li><li>协议<ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/http.md">HTTP 协议</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/tcp.md">TCP 协议</a></li></ul></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/CDN.md">CDN</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/web/other.md">其它</a></li></ul><h3 id="常用三方工具包">常用三方工具包</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/Goole-Guava.md">Google Guava</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/fastJson.md">fastJson</a></li><li><a href="http://blog.csdn.net/itomge/article/details/17913607">log4J</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/commons-codec.md">commons-codec</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/commons-lang3.md">commons-lang3</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/commons-io.md">commons-io</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/Quartz.md">Quartz</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/HttpClient.md">HttpClient</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/okhttp.md">okhttp</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/Javassist.md">Javassist</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/lombok.md">lombok</a></li></ul><h3 id="中间件">中间件</h3><ul><li><p>RPC框架</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/dubbo.md">dubbo</a></li><li><a href="https://www.oschina.net/p/dubbox">dubbox</a></li><li><a href="https://github.com/weibocom/motan">motan</a></li><li><a href="https://github.com/apache/thrift">Thrift</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/rpc-compare.md">RPC框架性能比较</a></li></ul></li><li><p>MQ消息</p><ul><li><a href="https://github.com/apache/activemq">ActiveMQ</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/RabbitMQ.md">RabbitMQ</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/kafka.md">Kafka</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/RocketMQ.md">RocketMQ</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/mq-compare.md">MQ框架性能比较</a></li></ul></li><li><p>分布式缓存</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/open-source-framework/redis.md">redis</a></li><li><a href="http://blog.csdn.net/itomge/article/details/8035197">memcache</a></li></ul></li><li><p>本地缓存</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/guava.md">Guava</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/ehcache.md">Ehcache</a></li></ul></li><li><p>搜索</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/elasticsearch.md">Elasticsearch</a></li></ul></li><li><p>分布式数据框架</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/cobar.md">cobar</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/mycat.md">Mycat</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/tsharding.md">tsharding</a></li><li><a href="https://github.com/alibaba/tb_tddl">tddl</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/sharding-jdbc.md">sharding-jdbc</a></li><li><a href="https://gitee.com/robertleepeak/dbsplit">dbsplit</a></li></ul></li><li><p>分布式协调服务</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/zookeeper.md">zookeeper</a></li></ul></li><li><p>配置管理</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/super-diamond%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.md">super-diamond</a></li><li><a href="https://www.oschina.net/p/disconf">disconf</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/apollo.md">apollo</a></li></ul></li><li><p>分布式文件系统</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/FastDFS.md">FastDFS</a></li></ul></li><li><p>分布式任务调度框架</p><ul><li><a href="https://github.com/elasticjob/elastic-job">Elastic-Job</a></li><li><a href="http://www.infoq.com/cn/articles/dangdang-distributed-work-framework-elastic-job">详解当当网的分布式作业框架elastic-job</a></li><li><a href="http://blog.csdn.net/taosir_zhang/article/details/50728362">TBSchedule</a></li><li><a href="https://github.com/xuxueli/xxl-job">xxl-job</a></li></ul></li><li><p>大数据</p><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/Hbase.md">Hbase</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/Spark.md">Spark</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/Hadoop.md">Hadoop</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/Hive.md">Hive</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/big-data.md">other框架</a></li></ul></li><li><p>其它</p><ul><li><a href="https://github.com/alibaba/canal">数据库binlog的增量订阅&amp;消费组件</a></li><li><a href="https://github.com/alibaba/otter">数据库同步系统</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/TCC-Transaction.md">TCC-Transaction</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/Netty.md">Netty</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/middle-software/openresty.md">OpenResty</a></li></ul></li></ul><h3 id="系统架构">系统架构</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/architecture-experience.md">架构经验</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/architecture-good-case.md">经典案例</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/technology-selection.md">通用技术方案选型</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/%E7%BC%96%E7%A0%81%E5%89%8D3000%E9%97%AE.md">编码前3000问</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/software-performance.md">软硬件性能</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/system-architecture/knowledge-outline.md">技术大纲</a></li></ul><h3 id="项目管理">项目管理</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/project-management/%E8%AE%BA%E9%9C%80%E6%B1%82%E8%B0%83%E7%A0%94%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7.md">论需求调研的重要性</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/project-management/project-management.md">项目管理</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/project-management/code.md">代码管理</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/project-management/test.md">测试相关</a></li></ul><h3 id="运维">运维</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/ops/online-question.md">快速排查线上问题</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/ops/linux-commands.md">linux常用命令</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/ops/%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E8%B0%83%E8%AF%95.md">本地代码调试</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/ops/docker.md">Docker</a></li></ul><h3 id="个人成长">个人成长</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/study.md">学习网站</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/book.md">Tom哥的读书单</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/person.md">个人成长与职业规划</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/programer.md">程序员素养</a></li></ul><h3 id="其它">其它</h3><ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/tool.md">常用软件工具</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/%E4%B8%80%E8%87%B4%E6%80%A7hash.md">一致性hash算法</a></li><li>面试<ul><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/java-interview.md">java面试题</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/bigdata-interview.md">大数据面试题</a></li></ul></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/%E5%9B%9E%E8%BD%A6%E4%B8%8E%E6%8D%A2%E8%A1%8C%E7%9A%84%E5%8C%BA%E5%88%AB.md">回车与换行的区别</a></li><li><a href="http://blog.csdn.net/qq1332479771/article/details/56087333">github上fork项目后，如何同步更新后面提交</a></li><li><a href="https://github.com/aalansehaiyang/technology-talk/blob/master/other/other.md">其它</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Java基础 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> web容器 </tag>
            
            <tag> 中间件 </tag>
            
            <tag> 系统架构 </tag>
            
            <tag> 项目管理 </tag>
            
            <tag> 运维 </tag>
            
            <tag> 个人成长 </tag>
            
            <tag> 常用三方工具包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux yum 只下载依赖不安装</title>
      <link href="/article/9b9da0c4/"/>
      <url>/article/9b9da0c4/</url>
      
        <content type="html"><![CDATA[<h1>yum --downloadonly</h1><p>yum命令的参数有很多，其中就有只是下载而不需要安装的命令，并且也会自动解决依赖；通常和 --downloaddir 参数一起使用。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install --downloadonly --downloaddir=/tmp/ vsftpd</span><br><span class="line"></span><br><span class="line">yum reinstall --downloadonly --downloaddir=/tmp/ vsftpd</span><br></pre></td></tr></table></figure><p>说明：如果该服务器已经安装了需要下载的软件包，那么使用 install下载就不行，可以使用reinstall下载。 放心（不会真的安装和重新安装，因为后面加了 --downloadonly，表明只是下载。</p><p>如果提示没有–downloadonly选项则需要安装yum-plugin-downloadonly软件包；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-plugin-downloadonly</span><br></pre></td></tr></table></figure><h1>yumdownloader</h1><p>如果只想通过 yum 下载软件的软件包，但是不需要进行安装的话，可以使用 yumdownloader 命令；   yumdownloader 命令在软件包 yum-utils 里面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-utils -y</span><br></pre></td></tr></table></figure><p>常用参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--destdir 指定下载的软件包存放路径</span><br><span class="line">--resolve 解决依赖关系并下载所需的包</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yumdownloader --destdir=/tmp --resolve httpd</span><br></pre></td></tr></table></figure><h1>reposync</h1><p>reposync 可以将远端yum仓库里面的包全部下载到本地。一般在构建自己的yum仓库时使用，同步仓库做成本地yum源，就不会遇到网络经常更新包而头痛的事情了。 该命令也是来自与 yum-utils 里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install yum-utils -y</span><br></pre></td></tr></table></figure><p>常用参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-r    指定已经本地已经配置的 yum 仓库的 repo源的名称。</span><br><span class="line">-p    指定下载的路径</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reposync -r epel -p /opt/local_epel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里巴巴达摩院 - 《达摩院2020十大科技趋势》</title>
      <link href="/article/damo2020/"/>
      <url>/article/damo2020/</url>
      
        <content type="html"><![CDATA[<p>1月2日，阿里达摩院发布《达摩院2020十大科技趋势》（下称《趋势》），一起见证那些期待已久或从未料想的变化，并循着技术演进的曲线找到我们的来处和去向。<br>在《趋势》完整白皮书中，阿里巴巴云智能总裁、阿里巴巴达摩院院长张建锋回顾了2019年全球科技产业取得的一系列突破。站在2020年新的起点，张建锋表示，达摩院特别邀请全球顶尖专家学者，与达摩院科学家共同碰撞观点、深入探讨，对人工智能、智联网、云计算、区块链、新计算、新材料等热点科技做出研判和预测，得出了2020年十大科技趋势。</p><p>中国科学院院士、清华大学副校长薛其坤在《趋势》卷首语中肯定了新技术对人类社会的革命性影响。清华大学苏世民书院院长、清华大学工程科技战略研究院副院长薛澜则寄语未来，期待政府、市场及社会各方共同努力，变理想为趋势，变趋势为现实。</p><p>阿里达摩院发布的2020年十大科技趋势涵盖人工智能、芯片制造、量子计算、工业互联网、机器协作、区块链、隐私保护、云计算等多个领域，勾勒出了新的一年科技行业的走向。具体如下：</p><h2 id="趋势一、人工智能从感知智能向认知智能演进">趋势一、人工智能从感知智能向认知智能演进</h2><p>【趋势概要】人工智能已经在“听、说、看”等感知智能领域已经达到或超越了人类水准，但在需要外部知识、逻辑推理或者领域迁移的认知智能领域还处于初级阶段。认知智能将从认知心理学、脑科学及人类社会历史中汲取灵感，并结合跨领域知识图谱、因果推理、持续学习等技术，建立稳定获取和表达知识的有效机制，让知识能够被机器理解和运用，实现从感知智能到认知智能的关键突破。</p><h2 id="趋势二、计算存储一体化突破AI算力瓶颈">趋势二、计算存储一体化突破AI算力瓶颈</h2><p>【趋势概要】冯诺伊曼架构的存储和计算分离，已经不适合数据驱动的人工智能应用需求。频繁的数据搬运导致的算力瓶颈以及功耗瓶颈已经成为对更先进算法探索的限制因素。类似于脑神经结构的存内计算架构将数据存储单元和计算单元融合为一体，能显著减少数据搬运，极大提高计算并行度和能效。计算存储一体化在硬件架构方面的革新，将突破AI算力瓶颈。</p><p><img src="/asserts/images/202001/Snipaste09-10-03.png" alt="AI"></p><h2 id="趋势三、工业互联网的超融合">趋势三、工业互联网的超融合</h2><p>【趋势概要】5G、IoT设备、云计算、边缘计算的迅速发展将推动工业互联网的超融合，实现工控系统、通信系统和信息化系统的智能化融合。制造企业将实现设备自动化、搬送自动化和排产自动化，进而实现柔性制造，同时工厂上下游制造产线能实时调整和协同。这将大幅提升工厂的生产效率及企业的盈利能力。对产值数十万亿乃至数百万亿的工业产业而言，提高5%-10%的效率，就会产生数万亿人民币的价值。</p><h2 id="趋势四、机器间大规模协作成为可能">趋势四、机器间大规模协作成为可能</h2><p>【趋势概要】传统单体智能无法满足大规模智能设备的实时感知、决策。物联网协同感知技术、5G通信技术的发展将实现多个智能体之间的协同——机器彼此合作、相互竞争共同完成目标任务。多智能体协同带来的群体智能将进一步放大智能系统的价值：大规模智能交通灯调度将实现动态实时调整，仓储机器人协作完成货物分拣的高效协作，无人驾驶车可以感知全局路况，群体无人机协同将高效打通最后一公里配送。</p><h2 id="趋势五、模块化降低芯片设计门槛">趋势五、模块化降低芯片设计门槛</h2><p>【趋势概要】传统芯片设计模式无法高效应对快速迭代、定制化与碎片化的芯片需求。以RISC-V为代表的开放指令集及其相应的开源SoC芯片设计、高级抽象硬件描述语言和基于IP的模板化芯片设计方法，推动了芯片敏捷设计方法与开源芯片生态的快速发展。此外，基于芯粒（chiplet）的模块化设计方法用先进封装的方式将不同功能“芯片模块”封装在一起，可以跳过流片快速定制出一个符合应用需求的芯片，进一步加快了芯片的交付。</p><h2 id="趋势六、规模化生产级区块链应用将走入大众">趋势六、规模化生产级区块链应用将走入大众</h2><p>【趋势概要】区块链BaaS(Blockchain as a Service)服务将进一步降低企业应用区块链技术的门槛，专为区块链设计的端、云、链各类固化核心算法的硬件芯片等也将应运而生，实现物理世界资产与链上资产的锚定，进一步拓展价值互联网的边界、实现万链互联。未来将涌现大批创新区块链应用场景以及跨行业、跨生态的多维协作，日活千万以上的规模化生产级区块链应用将会走入大众。</p><h2 id="趋势七、量子计算进入攻坚期">趋势七、量子计算进入攻坚期</h2><p>【趋势概要】2019年“量子霸权”之争让量子计算在再次成为世界科技焦点。超导量子计算芯片的成果，增强了行业对超导路线及对大规模量子计算实现步伐的乐观预期。2020年量子计算领域将会经历投入进一步增大、竞争激化、产业化加速和生态更加丰富的阶段。作为两个最关键的技术里程碑，容错量子计算和演示实用量子优势将是量子计算实用化的转折点。未来几年内，真正达到其中任何一个都将是十分艰巨的任务，量子计算将进入技术攻坚期。</p><h2 id="趋势八、新材料推动半导体器件革新">趋势八、新材料推动半导体器件革新</h2><p>【趋势概要】在摩尔定律放缓以及算力和存储需求爆发的双重压力下，以硅为主体的经典晶体管很难维持半导体产业的持续发展，各大半导体厂商对于3纳米以下的芯片走向都没有明确的答案。新材料将通过全新物理机制实现全新的逻辑、存储及互联概念和器件，推动半导体产业的革新。例如，拓扑绝缘体、二维超导材料等能够实现无损耗的电子和自旋输运，可以成为全新的高性能逻辑和互联器件的基础；新型磁性材料和新型阻变材料能够带来高性能磁性存储器如SOT-MRAM和阻变存储器。</p><h2 id="趋势九、保护数据隐私的AI技术将加速落地">趋势九、保护数据隐私的AI技术将加速落地</h2><p>【趋势概要】数据流通所产生的合规成本越来越高。使用AI技术保护数据隐私正在成为新的技术热点，其能够在保证各方数据安全和隐私的同时，联合使用方实现特定计算，解决数据孤岛以及数据共享可信程度低的问题，实现数据的价值。</p><h2 id="趋势十、云成为IT技术创新的中心">趋势十、云成为IT技术创新的中心</h2><p>【趋势概要】随着云技术的深入发展，云已经远远超过IT基础设施的范畴，渐渐演变成所有IT技术创新的中心。云已经贯穿新型芯片、新型数据库、自驱动自适应的网络、大数据、AI、物联网、区块链、量子计算整个IT技术链路，同时又衍生了无服务器计算、云原生软件架构、软硬一体化设计、智能自动化运维等全新的技术模式，云正在重新定义IT的一切。广义的云，正在源源不断地将新的IT技术变成触手可及的服务，成为整个数字经济的基础设施。</p>]]></content>
      
      
      <categories>
          
          <category> 科技趋势 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 达摩院 </tag>
            
            <tag> 科技趋势 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning-Hexo</title>
      <link href="/article/2e10121f/"/>
      <url>/article/2e10121f/</url>
      
        <content type="html"><![CDATA[<h1>Hexo 使用说明</h1><h2 id="Hexo三连">Hexo三连</h2><p>1.清理目录   2.生成静态文件   3.打包部署到服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><h2 id="Hexo的个人设置">Hexo的个人设置</h2><ol><li><a href="https://jerryc.me/posts/21cfbf15/">Butterfly主题</a> <a href="https://www.lucfzy.com/2020/02/butterfly-theme/">配置优化</a></li><li>hexo-deployer-git 发布到Github上</li><li>hexo-abbrlink 修改文章的链接地址 :abbrlink</li><li>hexo-generator-search 提供本地搜索功能</li><li>hexo-renderer-markdown-it 替换原有的 markdown 功能</li><li>hexo-asset-image 图片插件</li></ol><h2 id="新建">新建</h2><h3 id="新建文章">新建文章</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#x27;title&#x27;</span><br></pre></td></tr></table></figure><h3 id="新建页面">新建页面</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page xxx</span><br></pre></td></tr></table></figure><h2 id="部署发布">部署发布</h2><h3 id="clean">clean</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p><h3 id="generate">generate</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><h3 id="deploy">deploy</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><h1>MarkDown 语法</h1><ol><li><p><a href="http://xianbai.me/learn-md/">在线阅读</a></p></li><li><p><a href="https://github.com/LearnShare/Learning-Markdown/tree/v2">Code on Github</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
